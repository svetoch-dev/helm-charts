global:
  company:
    name: #example
    teams:
      domain: ""
      admin:
        emails: []
      qa:
        emails: []
      dev:
        emails: []
      pm:
        emails: []
    domain:
      root: #example.com
      env: #int.example.com, dev.example.com, prd.example.com etc
  network:
    int_nat_gw:
  registry:
    url:
  bucket:
    type:
    prefix:
    suffix:
  ingress:
    class: pomerium
  env:
    name: #aws-prd or aws-int or aws-stg
    server: #https://2.2.2.2
    short_name: #pre/prd/int/dev/etc
  access:
    teams: ["admin"]
    emails: []
  pomerium:
    policy:
      default: ""

gha-runner:
  enabled: false
  runnerScaleSetName: "infra-runner"
  kubernetesModeServiceAccount:
  controllerServiceAccount:
    namespace: gha-operator
    name: "gha-operator"
  containerMode:
    type: "kubernetes"
    kubernetesModeWorkVolumeClaim:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 2Gi
  listenerTemplate:
    spec:
      containers:
        - name: listener
          resources:
            limits:
              cpu: 300m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
  template:
    spec:
      nodeSelector:
        runner: 'true'
      tolerations:
        - key: runner
          operator: Equal
          value: 'true'
          effect: NoSchedule
      securityContext:
        fsGroup: 1001
      containers:
        - name: runner
          image: ghcr.io/actions/actions-runner:latest
          command: ["/home/runner/run.sh"]
          env:
            - name: ACTIONS_RUNNER_CONTAINER_HOOK_TEMPLATE
              value: /home/runner/templates/workflow-pod.yaml
            - name: ACTIONS_RUNNER_REQUIRE_JOB_CONTAINER
              value: "false"
          volumeMounts:
            - mountPath: /home/runner/templates
              name: templates
      volumes:
        - name: templates
          configMap:
            name: workflow-pod
workflowConfigMap:
  enabled: false
  name: workflow-pod
  metaLabels:
    argocd.argoproj.io/instance: "{{ .Release.Name }}"
  spec:
    securityContext:
      fsGroup: 1001
