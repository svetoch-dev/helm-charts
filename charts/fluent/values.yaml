global:
  image:
    repository: ghcr.io/fluent/fluent-operator/fluent-operator
    tag: v3.4.0@sha256:5d6a3d048aaae3acfbb67269acc996b566d63ce2478ff16cf1f49f4cceb6b4ed

fluentbit:
  enabled: false
  labels:
    fluentbit: "main"
  clusterInputs:
    systemd:
      systemd:
        tag: systemd.*
        path: "/var/log/journal"
        db: "/fluent-bit/tail/systemd.db"
        dbSync: Normal
        storageType: memory
    pods:
      tail:
        tag: kube.pods.<namespace_name>.<pod_name>.<container_name>.<container_id>
        tagRegex: '(?<pod_name>[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)_(?<namespace_name>[^_]+)_(?<container_name>.+)-(?<container_id>[a-z0-9]{64})\.log$'
        path: "/var/log/containers/*.log"
        readFromHead: true
        parser: cri
        refreshIntervalSeconds: 10
        memBufLimit: 100MB
        skipLongLines: true
        skipEmptyLines: true
        multilineParser: "cri"
        db: /fluent-bit/tail/pos.db
        dbSync: Normal
        storageType: memory

  clusterOutputs:
    systemd:
      match: "systemd.*"
      retry_limit: "no_limits"
      logLevel: "info"
      loki:
        dropSingleKey: "on"
        host: "loki-{{ .Values.global.env.name }}-write.loki.svc.cluster.local"
        port: 3100
        labels:
          env: "{{ .Values.global.env.name }}"
          job: fluentbit-systemd
          node: $_HOSTNAME
          stream: $_TRANSPORT
          level: $level
          systemd_unit: $_SYSTEMD_UNIT
        removeKeys:
          - _TRANSPORT
          - level
          - _SYSTEMD_UNIT
          - _HOSTNAME
    pods:
      match: "kube.pods.*"
      retry_limit: "no_limits"
      logLevel: "info"
      loki:
        dropSingleKey: "on"
        host: "loki-{{ .Values.global.env.name }}-write.loki.svc.cluster.local"
        port: 3100
        labels:
          env: "{{ .Values.global.env.name }}"
          job: fluentbit-pods
          pod: $kubernetes['pod_name']
          container: $kubernetes['container_name']
          namespace: $kubernetes['namespace_name']
          node: $kubernetes['host']
          stream: $stream
          level: $level
          app_kubernetes_io_instance: $kubernetes['labels']['app.kubernetes.io/instance']
          app_kubernetes_io_name: $kubernetes['labels']['app.kubernetes.io/name']
          app_kubernetes_io_version: $kubernetes['labels']['app.kubernetes.io/version']
          app_kubernetes_io_component: $kubernetes['labels']['app.kubernetes.io/component']
        removeKeys:
          - _p
          - time
          - stream
          - kubernetes
          - ts
          - logtag

  clusterFilters:
    systemd:
      match: systemd.*
      filters:
        - modify:
            conditions:
              - keyValueEquals:
                  PRIORITY: "0"
            rules:
              - set:
                  level: emerg
        - modify:
            conditions:
              - keyValueEquals:
                  PRIORITY: "1"
            rules:
              - set:
                  level: alert
        - modify:
            conditions:
              - keyValueEquals:
                  PRIORITY: "2"
            rules:
              - set:
                  level: crit
        - modify:
            conditions:
              - keyValueEquals:
                  PRIORITY: "3"
            rules:
              - set:
                  level: error
        - modify:
            conditions:
              - keyValueEquals:
                  PRIORITY: "4"
            rules:
              - set:
                  level: warn
        - modify:
            conditions:
              - keyValueEquals:
                  PRIORITY: "5"
            rules:
              - set:
                  level: notice
        - modify:
            conditions:
              - keyValueEquals:
                  PRIORITY: "6"
            rules:
              - set:
                  level: info
        - modify:
            conditions:
              - keyValueEquals:
                  PRIORITY: "7"
            rules:
              - set:
                  level: debug
        - modify:
            rules:
              - remove: _SYSTEMD_INVOCATION_ID
              - remove: _STREAM_ID
              - remove: _MACHINE_ID
              - remove: JOB_ID
              - remove: MESSAGE_ID
              - remove: _RUNTIME_SCOPE
              - remove: _SYSTEMD_SLICE
              - remove: _SOURCE_REALTIME_TIMESTAMP
              - remove: PRIORITY
              - remove: SYSLOG_TIMESTAMP

    pods:
      match: kube.pods.*
      ordinal: 100
      filters:
        - parser:
            parser: '{{ include "fluentbit-operated.fullname" $ }}-json'
            keyName: log
        - modify:
            rules:
              - hardRename:
                  severity: "level"
              - remove: ts
              - remove: time
              - remove: t
        - kubernetes:
            kubeURL: https://kubernetes.default.svc:443
            kubeCAFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            kubeTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
            kubeTagPrefix: "kube.pods."
            regexParser: '{{ include "fluentbit-operated.fullname" $ }}-kube-pod-tag'
        - modify:
            conditions:
              - keyValueEquals:
                  level: "CRITICAL"
            rules:
              - set:
                  level: crit
        - modify:
            conditions:
              - keyValueEquals:
                  level: "ERROR"
            rules:
              - set:
                  level: error
        - modify:
            conditions:
              - keyValueMatches:
                  level: "WARN|warning"
            rules:
              - set:
                  level: warn
        - modify:
            conditions:
              - keyValueEquals:
                  level: "INFO"
            rules:
              - set:
                  level: info
        - modify:
            conditions:
              - keyValueEquals:
                  level: "DEBUG"
            rules:
              - set:
                  level: debug

    fluentbit:
      match: 'kube.pods.fluent.{{ include "fluentbit-operated.fullname" $ }}*'
      ordinal: 0
      filters:
        - parser:
            parser: '{{ include "fluentbit-operated.fullname" $ }}-fluentbit'
            keyName: log
    kube-system:
      match: 'kube.pods.kube-system.*'
      ordinal: 101
      filters:
        - parser:
            parser: '{{ include "fluentbit-operated.fullname" $ }}-workloads'
            keyName: $kubernetes['pod_name']
            reserveData: true
        - lua:
            code: |
              function nest_under_kubernetes(tag, timestamp, record)
                  if record["app_kubernetes_io_name"] and record["kubernetes"] then
                     if record["kubernetes"]["labels"] == nil then
                         record["kubernetes"]["labels"] = {}
                     end
                     record["kubernetes"]["labels"]["app.kubernetes.io/instance"] = record["app_kubernetes_io_name"]
                     record["kubernetes"]["labels"]["app.kubernetes.io/name"] = record["app_kubernetes_io_name"]
                     record["app_kubernetes_io_name"] = nil
                  end
                  return 1, timestamp, record
              end
            call: nest_under_kubernetes

  clusterConfig:
    enabled: true
    service:
      parsersFile: /fluent-bit/etc/parsers.conf
      httpServer: true
    inputSelector:
      matchLabels:
        fluentbit: "main"
    filterSelector:
      matchLabels:
        fluentbit: "main"
    parserSelector:
      matchLabels:
        fluentbit: "main"
    outputSelector:
      matchLabels:
        fluentbit: "main"
    multilineParserSelector:
      matchLabels:
        fluentbit: "main"

  clusterParsers:
    json:
      json:
        timeKeep: false
    fluentbit:
      regex:
        regex: '^\[(?<time>[^\]]+)\][ ]*\[[ ]*(?<level>[^\]]+)\][ ]*\[(?<plugin>[^\]]+)\] (?<log>.*)'
        timeKey: 'time'
        timeFormat: '%Y/%m/%d %H:%M:%S'
    kube-pod-tag:
      regex:
        regex: '^(?<namespace_name>[^_]+)\.(?<pod_name>[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)\.(?<container_name>.+)\.(?<container_id>[a-z0-9]{64})'
    workloads:
      regex:
        regex: '^(?<app_kubernetes_io_name>[-a-z0-9]+?)(?:-[a-z0-9]{9,10}-[a-z0-9]{5}|-\d+|-[a-z0-9]{5}|)$'


  fluentbit:
    enabled: true
    image: ghcr.io/fluent/fluent-operator/fluent-bit:4.0.9
    positionDB:
      hostPath:
        path: /var/lib/fluent-bit/
    resources:
      limits:
        cpu: 500m
        memory: 200Mi
      requests:
        cpu: 10m
        memory: 25Mi
    livenessProbe:
      failureThreshold: 8
      httpGet:
        path: /
        port: 2020
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 15
    rbacRules:
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - list

fluentbit-gcp:
  enabled: false
  labels:
    fluentbit: "gcp"
  clusterInputs:
    control-plane:
      tail:
        tag: kube.control-plane.*
        path: "/var/log/k8s/kube-proxy/*.json"
        readFromHead: true
        parser: cri
        memBufLimit: 100MB
        skipLongLines: true
        skipEmptyLines: true
        db: /fluent-bit/tail/k8s.db
        dbSync: Normal
        storageType: memory

  clusterOutputs:
    stdout:
      match: 'kube.control-plane.*'
      stdout:
        format: json


  clusterConfig:
    enabled: true
    service:
      parsersFile: /fluent-bit/etc/parsers.conf
      httpServer: true
    inputSelector:
      matchLabels:
        fluentbit: "gcp"
    filterSelector:
      matchLabels:
        fluentbit: "gcp"
    parserSelector:
      matchLabels:
        fluentbit: "gcp"
    outputSelector:
      matchLabels:
        fluentbit: "gcp"
    multilineParserSelector:
      matchLabels:
        fluentbit: "gcp"


  collector:
    enabled: true
    annotations:
      gke-gcsfuse/volumes: 'true'
    image: ghcr.io/fluent/fluent-operator/fluent-bit:4.0.9-debug
    resources:
      limits:
        cpu: 500m
        memory: 1200Mi
      requests:
        cpu: 10m
        memory: 25Mi
    volumesMounts:
      - name: gcsfuse
        mountPath: /var/log/k8s
    volumes:
      - name: gcsfuse
        persistentVolumeClaim:
          claimName: '{{ include "fluentbit-operated.fullname" $ }}-gcsfuse'
  pvcs:
    gcsfuse:
      storage: 1Gi
      storageClass: gcsfuse
      volumeName: '{{ include "fluentbit-operated.fullname" $ }}-gcsfuse'
      accessModes:
        - ReadWriteMany
  pvs:
    gcsfuse:
      accessModes:
        - ReadWriteMany
      storage: 1Gi
      storageClass: gcsfuse
      mountOptions:
        - implicit-dirs
        - uid=1000
        - gid=1000
      csi:
        driver: gcsfuse.csi.storage.gke.io
        volumeHandle: '{{printf "%s-logs-%s" .Values.global.bucket.prefix .Values.global.bucket.suffix }}'
      claimRef:
        name: '{{ include "fluentbit-operated.fullname" $ }}-gcsfuse'
        namespace: '{{ .Release.Namespace }}'


operator:
  enabled: false
  service:
    enabled: false
  resources:
    limits:
      cpu: 100m
      memory: 60Mi
    requests:
      cpu: 100m
      memory: 20Mi
  environment:
    - name: NAMESPACE
      value: '{{ .Release.Namespace }}'
    - name: CONTAINER_ROOT_DIR
      value: /var/log
  args:
    - '-zap-encoder'
    - 'json'
  clusterRole:
    enabled: true
    rules:
      - apiGroups:
          - apps
        resources:
          - daemonsets
          - statefulsets
        verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
      - apiGroups:
          - ""
        resources:
          - pods
        verbs:
          - get
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - secrets
          - configmaps
          - serviceaccounts
          - services
          - namespaces
        verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
      - apiGroups:
          - fluentbit.fluent.io
        resources:
          - collectors
          - fluentbits
          - fluentbits/finalizers
          - clusterfluentbitconfigs
          - clusterfluentbitconfigs/finalizers
          - clusterfilters
          - clusterfilters/finalizers
          - clusterinputs
          - clusterinputs/finalizers
          - clusteroutputs
          - clusteroutputs/finalizers
          - clusterparsers
          - clusterparsers/finalizers
          - fluentbitconfigs
          - fluentbitconfigs/finalizers
          - multilineparsers
          - multilineparsers/finalizers
          - clustermultilineparsers
          - clustermultilineparsers/finalizers
          - filters
          - outputs
          - parsers
        verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
      - apiGroups:
          - fluentd.fluent.io
        resources:
          - fluentds
          - fluentds/status
          - clusterfluentdconfigs
          - clusterfluentdconfigs/status
          - fluentdconfigs
          - fluentdconfigs/status
          - clusterfilters
          - filters
          - clusteroutputs
          - outputs
          - inputs
          - clusterinputs
        verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
      - apiGroups:
          - rbac.authorization.k8s.io
        resources:
          - clusterrolebindings
        verbs:
          - create
          - list
          - get
          - watch
          - patch
      - apiGroups:
          - rbac.authorization.k8s.io
        resources:
          - clusterroles
        verbs:
          - create
          - list
          - get
          - watch
          - patch
      - apiGroups:
          - rbac.authorization.k8s.io
        resources:
          - rolebindings
        verbs:
          - create
          - list
          - get
          - watch
          - patch
      - apiGroups:
          - rbac.authorization.k8s.io
        resources:
          - roles
        verbs:
          - create
          - list
          - get
          - watch
          - patch
