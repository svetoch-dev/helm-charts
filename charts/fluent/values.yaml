operator:
  enabled: false
  containerRuntime: containerd
  fluentbit:
    crdsEnable: false
    enable: false
    input:
      tail:
        enable: false
      systemd:
        enable: false
      containerd:
        enable: false
    filter:
      kubernetes:
        enable: false
  fluentd:
    enable: false
    crdsEnable: false

fluentbit:
  enabled: true
  inputs:
    enabled: true
    labels:
      fluentbit: "main"
    clusterInputs:
      systemd:
        systemd:
          tag: systemd.*
          path: "/var/log/journal"
          db: "/fluent-bit/tail/systemd.db"
          dbSync: Normal
          storageType: memory
      pods:
        tail:
          tag: kube.pods.<namespace_name>.<pod_name>.<container_name>.<container_id>
          tagRegex: '(?<pod_name>[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)_(?<namespace_name>[^_]+)_(?<container_name>.+)-(?<container_id>[a-z0-9]{64})\.log$'
          path: "/var/log/containers/*.log"
          readFromHead: true
          parser: cri
          refreshIntervalSeconds: 10
          memBufLimit: 100MB
          skipLongLines: true
          skipEmptyLines: true
          multilineParser: "cri"
          db: /fluent-bit/tail/pos.db
          dbSync: Normal
          storageType: memory

  outputs:
    enabled: true
    labels:
      fluentbit: "main"
    clusterOutputs:
      systemd:
        match: "systemd.*"
        retry_limit: "no_limits"
        logLevel: "info"
        loki:
          dropSingleKey: "on"
          host: "loki-{{ .Values.global.env.name }}-write.loki.svc.cluster.local"
          port: 3100
          labels:
            env: "{{ .Values.global.env.name }}"
            job: fluentbit-systemd
            node: $_HOSTNAME
            stream: $_TRANSPORT
            level: $level
            systemd_unit: $_SYSTEMD_UNIT
          removeKeys:
            - _TRANSPORT
            - level
            - _SYSTEMD_UNIT
            - _HOSTNAME
      pods:
        match: "kube.pods.*"
        retry_limit: "no_limits"
        logLevel: "info"
        loki:
          dropSingleKey: "on"
          host: "loki-{{ .Values.global.env.name }}-write.loki.svc.cluster.local"
          port: 3100
          labels:
            env: "{{ .Values.global.env.name }}"
            job: fluentbit-pods
            pod: $kubernetes['pod_name']
            container: $kubernetes['container_name']
            namespace: $kubernetes['namespace_name']
            node: $kubernetes['host']
            stream: $stream
            level: $level
            app_kubernetes_io_instance: $kubernetes['labels']['app.kubernetes.io/instance']
            app_kubernetes_io_name: $kubernetes['labels']['app.kubernetes.io/name']
            app_kubernetes_io_version: $kubernetes['labels']['app.kubernetes.io/version']
            app_kubernetes_io_component: $kubernetes['labels']['app.kubernetes.io/component']
          removeKeys:
            - _p
            - time
            - stream
            - kubernetes
            - ts
            - logtag

  filters:
    enabled: true
    labels:
      fluentbit: "main"
    clusterFilters:
      systemd:
        match: systemd.*
        filters:
          1levelEmerg:
            modify:
              conditions:
                - keyValueEquals:
                    PRIORITY: "0"
              rules:
                - set:
                    level: emerg
          2levelAlert:
            modify:
              conditions:
                - keyValueEquals:
                    PRIORITY: "1"
              rules:
                - set:
                    level: alert
          3levelCrit:
            modify:
              conditions:
                - keyValueEquals:
                    PRIORITY: "2"
              rules:
                - set:
                    level: crit
          4levelErr:
            modify:
              conditions:
                - keyValueEquals:
                    PRIORITY: "3"
              rules:
                - set:
                    level: error
          5levelWarn:
            modify:
              conditions:
                - keyValueEquals:
                    PRIORITY: "4"
              rules:
                - set:
                    level: warn
          6levelNotice:
            modify:
              conditions:
                - keyValueEquals:
                    PRIORITY: "5"
              rules:
                - set:
                    level: notice
          7levelInfo:
            modify:
              conditions:
                - keyValueEquals:
                    PRIORITY: "6"
              rules:
                - set:
                    level: info
          8leveldebug:
            modify:
              conditions:
                - keyValueEquals:
                    PRIORITY: "7"
              rules:
                - set:
                    level: debug
          9removeKeys:
            modify:
              rules:
                - remove: _SYSTEMD_INVOCATION_ID
                - remove: _STREAM_ID
                - remove: _MACHINE_ID
                - remove: JOB_ID
                - remove: MESSAGE_ID
                - remove: _RUNTIME_SCOPE
                - remove: _SYSTEMD_SLICE
                - remove: _SOURCE_REALTIME_TIMESTAMP
                - remove: PRIORITY
                - remove: SYSLOG_TIMESTAMP

      pods:
        match: kube.pods.*
        ordinal: 100
        filters:
          1parseJsonLog:
            parser:
              parser: '{{ .Release.Name }}-parsers-json'
              keyName: log
          2removeKeys:
            modify:
              rules:
                - hardRename:
                    severity: "level"
                - remove: ts
                - remove: time
                - remove: t
          99kubeMetadata:
            kubernetes:
              kubeURL: https://kubernetes.default.svc:443
              kubeCAFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              kubeTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              kubeTagPrefix: "kube.pods."
              regexParser: '{{ .Release.Name }}-parsers-tail-tag'
          100levelCrit:
            modify:
              conditions:
                - keyValueEquals:
                    level: "CRITICAL"
              rules:
                - set:
                    level: crit
          101levelErr:
            modify:
              conditions:
                - keyValueEquals:
                    level: "ERROR"
              rules:
                - set:
                    level: error
          102levelWarn:
            modify:
              conditions:
                - keyValueEquals:
                    level: "WARN"
              rules:
                - set:
                    level: warn
          103levelInfo:
            modify:
              conditions:
                - keyValueEquals:
                    level: "INFO"
              rules:
                - set:
                    level: info
          104leveldebug:
            modify:
              conditions:
                - keyValueEquals:
                    level: "DEBUG"
              rules:
                - set:
                    level: debug

      fluentbit:
        match: 'kube.pods.fluent.{{ .Release.Name }}-fluentbit*'
        ordinal: 0
        filters:
          fluentbit:
            parser:
              parser: '{{ .Release.Name }}-parsers-fluentbit'
              keyName: log

  clusterConfig:
    enabled: true
    service:
      parsersFile: /fluent-bit/etc/parsers.conf
      httpServer: true
    inputSelector:
      matchLabels:
        fluentbit: "main"
    filterSelector:
      matchLabels:
        fluentbit: "main"
    parserSelector:
      matchLabels:
        fluentbit: "main"
    outputSelector:
      matchLabels:
        fluentbit: "main"
    multilineParserSelector:
      matchLabels:
        fluentbit: "main"

  parsers:
    enabled: true
    labels:
      fluentbit: "main"
    clusterParsers:
      json:
        json:
          timeKeep: false
      fluentbit:
        regex:
          regex: '^\[(?<time>[^\]]+)\][ ]*\[[ ]*(?<level>[^\]]+)\][ ]*\[(?<plugin>[^\]]+)\] (?<log>.*)'
          timeKey: 'time'
          timeFormat: '%Y/%m/%d %H:%M:%S'
      tail-tag:
        regex:
          regex: '^(?<namespace_name>[^_]+)\.(?<pod_name>[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)\.(?<container_name>.+)\.(?<container_id>[a-z0-9]{64})'


  fluentbit:
    enabled: true
    image: ghcr.io/fluent/fluent-operator/fluent-bit:4.0.1
    positionDB:
      hostPath:
        path: /var/lib/fluent-bit/
    resources:
      limits:
        cpu: 500m
        memory: 200Mi
      requests:
        cpu: 10m
        memory: 25Mi
    fluentBitConfigName: '{{ include "fluentbit-operated.fullname" . }}'
    livenessProbe:
      failureThreshold: 8
      httpGet:
        path: /
        port: 2020
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 15
    rbacRules:
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - list
