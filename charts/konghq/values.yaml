kong-plugins:
  enabled: false
  plugins: []

kong:
  enabled: true
  env:
    database: "off"
    nginx_worker_processes: "1"
    nginx_main_worker_processes: "1"
    headers: "latency_tokens,X-Kong-Upstream-Status"
    nginx_upstream_keepalive_timeout: "302s"
    nginx_upstream_keepalive_requests: "1000"
    nginx_http_client_body_buffer_size: "2m"
    nginx_proxy_client_body_timeout: "302s"
    nginx_proxy_client_header_timeout: "302s"
    nginx_proxy_proxy_send_timeout: "302s"
    nginx_proxy_proxy_read_timeout: "302s"
    anonymous_reports: "off"
    admin_access_log: /dev/null
    admin_gui_access_log: /dev/stdout
    portal_api_error_log: /dev/stderr
    portal_api_access_log: /dev/stdout
    proxy_access_log: "/dev/stdout json"
    nginx_http_log_format: 'json ''{"@type": "nginx", ''
      ''"http_host": "$http_host", ''
      ''"remote_addr": "$remote_addr", ''
      ''"time_local": "$time_local", ''
      ''"request": "$request", ''
      ''"request_length": "$request_length", ''
      ''"content_length": "$content_length", ''
      ''"connection_requests": "$connection_requests", ''
      ''"status": "$status", ''
      ''"body_bytes_sent": "$body_bytes_sent", ''
      ''"http_referer": "$http_referer", ''
      ''"http_user_agent": "$http_user_agent", ''
      ''"http_x_forwarded_for": "$http_x_forwarded_for", ''
      ''"request_time": "$request_time", ''
      ''"upstream_response_time": "$upstream_response_time", ''
      ''"upstream_addr": "$upstream_addr" }'''
  proxy:
    externalTrafficPolicy: Local
  ingressController:
    admissionWebhook:
      enabled: false
      failurePolicy: Fail
      port: 8080
      certificate:
        provided: true
        secretName: konghq-webhook
      namespaceSelector: {}
      annotations:
        cert-manager.io/inject-ca-from: konghq/konghq-webhook
      useCertManager: true
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: kong

  podDisruptionBudget:
    enabled: true
    maxUnavailable: "1"

  serviceMonitor:
    # Specifies whether ServiceMonitor for Prometheus operator should be created
    enabled: true
    # interval: 10s
    # Specifies namespace, where ServiceMonitor should be installed
    # namespace: monitoring
    labels:
      prometheus: main
