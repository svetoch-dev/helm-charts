kong-plugins:
  enabled: false
  plugins:
    - name: loki-ip-restriction
      plugin_name: ip-restriction
      annotations:
        kubernetes.io/ingress.class: konghq
      config:
        allow:
          - "{{ .Values.global.network.int_nat_gw }}"

loki:
  enabled: false
  deploymentMode: SimpleScalable
  nameOverride: "loki-{{ .Values.global.env.name }}"
  test:
    enabled: false
  lokiCanary:
    enabled: false
  serviceAccount:
    create: false
    name: grafana-loki
  loki:
    auth_enabled: false
    limits_config:
      max_label_names_per_series: 20
      discover_log_levels: false
      log_level_fields: []
    analytics:
      reporting_enabled: false
    storage:
      type: "{{ .Values.global.bucket.type }}"
      bucketNames:
        chunks: "{{ .Values.global.company.name }}-loki-{{ .Values.global.env.name }}"
        ruler: "{{ .Values.global.company.name }}-loki-{{ .Values.global.env.name }}"
        admin: "{{ .Values.global.company.name }}-loki-{{ .Values.global.env.name }}"
      use_thanos_objstore: false
      #object_store:
        #type: "{{ .Values.global.bucket.type }}"
        #gcs:
          #bucket_name:  "{{ .Values.global.company.name }}-loki-{{ .Values.global.env.name }}"
          #service_account: ""
    schemaConfig:
      configs:
        - from: 2025-05-01
          object_store: "{{ .Values.global.bucket.type }}"
          store: tsdb
          schema: v13
          index:
            prefix: index_
            period: 24h
  gateway:
    enabled: false
  ingress:
    enabled: false
    ingressClassName: "konghq"
    annotations:
      konghq.com/plugins: loki-ip-restriction
      cert-manager.io/cluster-issuer: letsencrypt-kongh
    hosts:
      - loki.{{ .Values.global.company.domain.env }}"
    tls:
      - secretName: loki-read-tls
        hosts:
          - loki.{{ .Values.global.company.domain.env }}"
