labels: {}

company:
  name: #example
  gcp:
    enabled: false
    bucket:
      prefix:
    project_id: #example-production
  domain:
    root: #example.com
    env: #int.example.com, dev.example.com, prd.example.com etc
  network:
    int_nat_gw:


env:
  name: #aws-prd or aws-int or aws-stg
  server: #https://2.2.2.2
  short_name: #pre/prd/int/dev/etc

repository:
  url: #git@github.com:ggramal/infrared.git
  paths:
    charts: argocd/charts/infra/charts
    crds: argocd/charts/infra/crds
    manifests: "argocd/environments/{{ .Values.env.name }}/manifests"
    app_charts: argocd/charts/app
    env_from_charts: ../../../../environments/{{ .Values.env.name }}
    env_from_app_charts: ../../../environments/{{ .Values.env.name }}
  revision: master


manifests:
  enabled: false
  directory: {}
  revision:
  labels: {}
  finalizers: {}
  syncPolicy: {}

crds:
  enabled: false
  operators: {}
#    argocd:
#      enabled: true
#    grafana-operator:
#      enabled: true
#    prometheus-operator:
#      enabled: true
#    cert-manager:
#      enabled: true
#      directory:
#        recurse: true
#    external-dns:
#      enabled: true
#      revision: test
#    konghq:
#      enabled: true
#    postgres-operator:
#      enabled: true
#    redis-operator:
#      enabled: true
#    rabbitmq-cluster:
#      enabled: true
#    rabbitmq-messaging-topology:
#      enabled: true

  labels: {}
  finalizers: {}
  syncPolicy: {}

chart_apps:
  postgres:
    enabled: false
    values: |
      postgres-operator:
        configAwsOrGcp:
          wal_gs_bucket: "{{ .Values.company.gcp.bucket.prefix }}-postgres-{{ .Values.env.short_name }}"
        configLogicalBackup:
          logical_backup_s3_bucket: "{{ .Values.company.gcp.bucket.prefix }}-postgres-backup-{{ .Values.env.short_name }}"
  grafana:
    enabled: false
    parameters:
    - name: "global.domain.env"
      value: "{{ .Values.company.domain.env }}"
    - name: "global.domain.root"
      value: "{{ .Values.company.domain.root }}"
  konghq:
    enabled: false
    values: |
      kong:
        proxy:
          annotations:
            external-dns.alpha.kubernetes.io/hostname: "*.{{ .Values.company.domain.env }}."
  cert-manager:
    enabled: false
    parameters:
    - name: "global.domain.env"
      value: "{{ .Values.company.domain.env }}"
    - name: "global.domain.root"
      value: "{{ .Values.company.domain.root }}"
  argocd:
    enabled: false
    parameters:
    - name: "argo-cd.server.ingress.hostname"
      value: "argocd.{{ .Values.company.domain.env }}"
    - name: "global.svc.prometheus.blackbox"
      value: "prometheus-{{ .Values.env.name }}-prometheus-blackbox-exporter.prometheus.svc.cluster.local"
  prometheus:
    enabled: false
    parameters:
    - name: "global.domain.env"
      value: "{{ .Values.company.domain.env }}"
    - name: "global.domain.root"
      value: "{{ .Values.company.domain.root }}"
    - name: "global.envs.int.natgw"
      value: "{{ .Values.company.network.int_nat_gw }}"
