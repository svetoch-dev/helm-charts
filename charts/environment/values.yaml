labels: {}

externalEnvs: {}

repository:
  url: #git@github.com:ggramal/infrared.git
  paths:
    charts: argocd/charts/infra/charts
    crds: argocd/charts/infra/crds
    manifests: "argocd/environments/{{ .Values.global.env.name }}/manifests"
    app_charts: argocd/charts/app
    env_from_charts: ../../../../environments/{{ .Values.global.env.name }}
    env_from_app_charts: ../../../environments/{{ .Values.global.env.name }}
    globals_from_app_charts: ../../infra/charts/globals.yaml
    globals_from_charts: ../globals.yaml
  revision: master


manifests:
  enabled: false
  directory: {}
  revision:
  labels: {}
  finalizers: {}
  syncPolicy: {}

crds:
  enabled: false
  operators: {}
#    argocd:
#      enabled: true
#    grafana-operator:
#      enabled: true
#    prometheus-operator:
#      enabled: true
#    cert-manager:
#      enabled: true
#      directory:
#        recurse: true
#    external-dns:
#      enabled: true
#      revision: test
#    konghq:
#      enabled: true
#    postgres-operator:
#      enabled: true
#    redis-operator:
#      enabled: true
#    rabbitmq-cluster:
#      enabled: true
#    rabbitmq-messaging-topology:
#      enabled: true
#    fluent-operator:
#      enabled: true

  labels: {}
  finalizers: {}
  syncPolicy: {}

chart_apps:
  rabbitmq:
    enabled: false
    values: |
      global: {{ .Values.global | toYaml | nindent 4 }}
        access:
          teams: ["admin", "dev"]
          emails: []
  redis:
    enabled: false
    values: |
      global: {{ .Values.global | toYaml | nindent 4 }}
  external-dns:
    enabled: false
    values: |
      global: {{ .Values.global | toYaml | nindent 4 }}
  gha-runner:
    enabled: false
    values: |
      global: {{ .Values.global | toYaml | nindent 4 }}
  gha-operator:
    enabled: false
    values: |
      global: {{ .Values.global | toYaml | nindent 4 }}
  pomerium:
    enabled: false
    values: |
      global: {{ .Values.global | toYaml | nindent 4 }}
  postgres:
    enabled: false
    values: |
      global: {{ .Values.global | toYaml | nindent 4 }}
        access:
          teams: ["admin", "dev", "pm", "qa"]
          emails: []
  grafana:
    enabled: false
    values: |
      global: {{ .Values.global | toYaml | nindent 4 }}
        access:
          teams: ["admin", "dev", "pm", "qa"]
          emails: []
      datasource:
        datasources:
          {{- range $env_name, $env_obj := .Values.externalEnvs }}
          loki-{{ tpl $env_name $ }}:
            enabled: true
            uid: loki-{{ tpl $env_name $ }}
            selector:
              grafana: main
            datasource:
              type: loki
              isDefault: false
              access: proxy
              jsonData:
                manageAlerts: 'false'
              url: https://loki.{{ $env_obj.domain }}
          {{- end }}
  konghq:
    enabled: false
    values: |
      global: {{ .Values.global | toYaml | nindent 4 }}
        ingress:
          class: konghq
  cert-manager:
    enabled: false
    values: |
      global: {{ .Values.global | toYaml | nindent 4 }}
  argocd:
    enabled: false
    values: |
      global: {{ .Values.global | toYaml | nindent 4 }}
        environment: {{ .Values.global.env | toYaml | nindent 6 }}
        access:
          teams: ["admin", "dev"]
          emails: []
      argocd:
        externalRedis:
          host: rfrm-argocd-{{ .Values.global.env.name }}-redis
          port: 6379
          existingSecret: "argocd-redis"
  prometheus:
    enabled: false
    values: |
      global: {{ .Values.global | toYaml | nindent 4 }}
  fluent:
    enabled: false
    values: |
      global: {{ .Values.global | toYaml | nindent 4 }}
  thanos:
    enabled: false
    values: |
      global: {{ .Values.global | toYaml | nindent 4 }}
  loki:
    enabled: false
    values: |
      global: {{ .Values.global | toYaml | nindent 4 }}
      loki:
        nameOverride: "loki-{{ .Values.global.env.name }}"
        loki:
          storage:
            type: "{{ .Values.global.bucket.type }}"
            bucketNames:
              chunks: "{{ .Values.global.company.name }}-loki-{{ .Values.global.env.short_name }}"
              ruler: "{{ .Values.global.company.name }}-loki-{{ .Values.global.env.short_name }}"
              admin: "{{ .Values.global.company.name }}-loki-{{ .Values.global.env.short_name }}"
          schemaConfig:
            configs:
              - from: 2025-05-01
                object_store: "{{ .Values.global.bucket.type }}"
                store: tsdb
                schema: v13
                index:
                  prefix: index_
                  period: 24h
