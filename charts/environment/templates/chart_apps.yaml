{{- range $chart_app_name, $chart_app_obj := .Values.chart_apps -}}
{{- $app_name := (printf "%s-%s" $chart_app_name $.Values.global.env.name) }}
{{- $app_name := ternary $app_name $chart_app_obj.name (not $chart_app_obj.name) }}
{{- $chart_path := ternary $.Values.repository.paths.app_charts $.Values.repository.paths.charts (eq $chart_app_obj.app true) }}
{{- $env_path := ternary $.Values.repository.paths.env_from_app_charts $.Values.repository.paths.env_from_charts (eq $chart_app_obj.app true) }}
{{- if $chart_app_obj.enabled -}}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ $app_name }}
  namespace: argocd
  {{- with $chart_app_obj.finalizers }}
  finalizers:
  {{- toYaml . | nindent 6 }}
  {{- end }}
  labels:
  {{- with $.Values.labels }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with $chart_app_obj.labels }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  destination:
    server: {{ $.Values.global.env.server }}
    {{- if $chart_app_obj.namespace }}
    namespace: {{ $chart_app_obj.namespace }}
    {{- end }}
  project: {{ $chart_app_obj.project | default "default" }}
  {{- if $chart_app_obj.values_sources }}
  sources:
  - repoURL: {{ $chart_app_obj.repo_url | default $.Values.repository.url }}
    {{- if $chart_app_obj.chart }}
    path: {{ $chart_app_obj.chart }}
    {{- else }}
    path: {{ tpl (printf "%s/%s" $chart_path $chart_app_name) $ }}
    {{- end }}
    targetRevision: {{ $chart_app_obj.revision | default $.Values.repository.revision }}
    {{- if $chart_app_obj.helm }}
    {{- with $chart_app_obj.helm }}
    helm:
      skipCrds: true
    {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- else }}
    helm:
      skipCrds: true
    {{- if $chart_app_obj.releaseName }}
      releaseName: {{ $chart_app_obj.releaseName }}
    {{- else }}
      releaseName: {{ $app_name }}
    {{- end }}
      valueFiles:
        - ../globals.yaml
        - {{ tpl (printf "%s/%s/values.yaml" $env_path $chart_app_name) $ }}
    {{- end }}
    {{- with $chart_app_obj.parameters }}
      parameters:
    {{- tpl (toYaml .) $ | nindent 8 }}
    {{- end }}
    {{- with $chart_app_obj.valuesObject }}
      valuesObject:
    {{- tpl (toYaml .) $ | nindent 8 }}
    {{- end }}
    {{- if $chart_app_obj.values }}
      values: {{ tpl (toYaml $chart_app_obj.values) $ | nindent 8 }}
    {{- end }}
    {{- with $chart_app_obj.values_sources }}
    {{- toYaml . | nindent 2 }}
    {{- end }}
  {{- else }}
  source:
    repoURL: {{ $chart_app_obj.repo_url | default $.Values.repository.url }}
    {{- if $chart_app_obj.chart }}
    path: {{ $chart_app_obj.chart }}
    {{- else }}
    path: {{ tpl (printf "%s/%s" $chart_path $chart_app_name) $ }}
    {{- end }}
    targetRevision: {{ $chart_app_obj.revision | default $.Values.repository.revision }}
    {{- if $chart_app_obj.helm }}
    {{- with $chart_app_obj.helm }}
    helm:
      skipCrds: true
    {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- else }}
    helm:
      skipCrds: true
    {{- if $chart_app_obj.releaseName }}
      releaseName: {{ $chart_app_obj.releaseName }}
    {{- else }}
      releaseName: {{ $app_name }}
    {{- end }}
      valueFiles:
        - ../globals.yaml
        - {{ tpl (printf "%s/%s/values.yaml" $env_path $chart_app_name) $ }}
    {{- end }}
    {{- with $chart_app_obj.parameters }}
      parameters:
    {{- tpl (toYaml .) $ | nindent 8 }}
    {{- end }}
    {{- with $chart_app_obj.valuesObject }}
      valuesObject:
    {{- tpl (toYaml .) $ | nindent 8 }}
    {{- end }}
    {{- if $chart_app_obj.values }}
      values: {{ tpl (toYaml $chart_app_obj.values) $ | nindent 8 }}
    {{- end }}
  {{- end }}
  {{- with $chart_app_obj.syncPolicy }}
  syncPolicy:
  {{- toYaml . | nindent 4 }}
  {{- end }}
{{ end }}
{{- end }}
