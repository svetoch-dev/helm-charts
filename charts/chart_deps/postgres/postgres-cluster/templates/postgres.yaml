{{- $defaultSidecars := include "postgres-cluster.defaultSidecars" . | fromYaml }}
{{/*
If sidecar has the same key as the default sidecar
its attrs override the attrs of the default one
*/}}
{{- $sidecars := merge .Values.sidecars $defaultSidecars }}
{{- $sidecars = values $sidecars | sortAlpha }}
---
apiVersion: "acid.zalan.do/v1"
kind: postgresql
metadata:
  name: {{ include "postgres-cluster.fullname" . }}
  {{- with .Values.annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
    {{- include "postgres-cluster.labels" . | nindent 4 }}
{{- else }}
    {{- include "postgres-cluster.labels" . | nindent 4 }}
{{- end }}
spec:
  teamId: {{ .Values.teamId }}
  {{- if .Values.dockerImage }}
  dockerImage: {{ .Values.dockerImage }}
  {{- end }}
  numberOfInstances: {{ .Values.replicas | default "2" }}
  {{- with .Values.users }}
  users:
  {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  {{- with .Values.databases }}
  databases:
  {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  {{- with .Values.preparedDatabases }}
  preparedDatabases:
  {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  {{- with .Values.postgresql }}
  postgresql:
  {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  {{- with .Values.env }}
  env:
  {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  {{- with .Values.volume }}
  volume:
  {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  enableShmVolume: {{ .Values.enableShmVolume | default true }}
  {{- with .Values.podAnnotations }}
  podAnnotations:
  {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  {{- with .Values.serviceAnnotations }}
  serviceAnnotations:
  {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  {{- with .Values.tolerations }}
  tolerations:
  {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  {{- with .Values.resources }}
  resources:
  {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  {{- with .Values.patroni }}
  patroni:
  {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  enableLogicalBackup: {{ .Values.logicalBackup.enabled }}
  logicalBackupSchedule: {{ .Values.logicalBackup.schedule  }}
  {{- with .Values.connectionPooler }}
  connectionPooler:
  {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  sidecars:
  {{- range $sObj := $sidecars }}
  - name: {{ $sObj.name }}
    image: {{ $sObj.image }}
    {{- with $sObj.ports }}
    ports:
    {{- tpl (toYaml .) $ | nindent 6 }}
    {{- end }}
    {{- with $sObj.resources }}
    resources:
    {{- tpl (toYaml .) $ | nindent 6 }}
    {{- end }}
    env:
    {{- range $eName, $eObj := $sObj.env }}
    - name: {{ $eName }}
    {{- tpl (toYaml . ) $ | nindent 6 }}
    {{- end }}
  {{- end }}
  {{- with .Values.nodeAffinity }}
  nodeAffinity:
  {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  {{- with .Values.clone }}
  clone:
  {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
