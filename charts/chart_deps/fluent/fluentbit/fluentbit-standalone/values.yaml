nameOverride: ""
fullnameOverride: ""

configs:
  http_server: true

secrets:
  config:
    data:
      fluent-bit.yaml: |
        {{- range $name, $parser := .Values.parsers }}
        parsers:
        - {{ toYaml $parser | nindent 2 | trim }}
        {{- end }}
        {{- with .Values.configs }}
        service:
        {{- tpl (toYaml . ) $ | nindent 2 }}
        {{- end }}
        pipeline:
          {{- range $name, $input := .Values.inputs }}
          inputs:
          - {{ toYaml $input | nindent 4 | trim }}
          {{- end }}
          {{- range $filter := .Values.filters }}
          filters:
          - {{ toYaml $filter | nindent 4 | trim }}
          {{- end }}
          {{- range $name, $output := .Values.outputs }}
          outputs:
          - {{ toYaml $output | nindent 4 | trim }}
          {{- end }}


fluentbit:
  enabled: false
  statefulsetEnabled: true
  replicaCount: 1
  revisionHistoryLimit: 2

  image: 'ghcr.io/fluent/fluent-operator/fluent-bit:4.0.9-debug'

  imagePullPolicy: IfNotPresent

  imagePullSecrets: []

  volumeClaimTemplates: {}

  volumes: {}
  volumeMounts: {}

  env:
    - name: NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: HOST_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.hostIP

  persistentVolumeClaimRetentionPolicy:
    whenDeleted: "Delete"

  clusterRole:
    enabled: false
    name: '{{ include "fluentbit.fullname" . }}'
    rules: []
    serviceAccount:
      name: '{{ include "fluentbit.serviceAccountName" . }}'
      namespace: '{{ .Release.Namespace }}'

  role:
    enabled: false
    name: '{{ include "fluentbit.fullname" . }}'
    rules: []
    serviceAccount:
      name: '{{ include "fluentbit.serviceAccountName" . }}'
      namespace: '{{ .Release.Namespace }}'

  serviceAccount:
    create: true
    annotations: {}
    name: ""

  pvcs: {}

  pvs: {}

  initContainers: {}

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    enabled: true
    name: '{{ include "fluentbit.fullname" . }}'
    type: ClusterIP
    ports:
      - port: 80
        targetPort: http
        protocol: TCP
        name: http

  resources: {}

  ports: []
  #  - name: http
  #    containerPort: 3001
  #    protocol: TCP

  livenessProbe: {}
  #  httpGet:
  #    path: /
  #    port: http

  readinessProbe: {}
  #  httpGet:
  #    path: /
  #    port: http

  command: []

  args: []

  serviceMonitor:
    enabled: false
    prometheusSelector:
  #    prometheus: test
    labels:
    targetLabels:
    endpoints:
      - targetPort: 9355
        path: /metrics
